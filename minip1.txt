package com.example.stopwatchapp;

import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private TextView tvTime;
    private Button btnStart, btnStop, btnReset;

    private Handler handler = new Handler();
    private long startTime, elapsedTime = 0L;
    private boolean isRunning = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Initialize views
        tvTime = findViewById(R.id.tv_time);
        btnStart = findViewById(R.id.btn_start);
        btnStop = findViewById(R.id.btn_stop);
        btnReset = findViewById(R.id.btn_reset);

        // Start button listener
        btnStart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                startStopwatch();
            }
        });

        // Stop button listener
        btnStop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                stopStopwatch();
            }
        });

        // Reset button listener
        btnReset.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                resetStopwatch();
            }
        });
    }

    private void startStopwatch() {
        if (!isRunning) {
            startTime = System.currentTimeMillis() - elapsedTime;
            handler.postDelayed(updateTimeRunnable, 0);
            isRunning = true;

            // Show/Hide buttons
            btnStart.setVisibility(View.GONE);
            btnStop.setVisibility(View.VISIBLE);
            btnReset.setVisibility(View.VISIBLE);
        }
    }

    private void stopStopwatch() {
        if (isRunning) {
            handler.removeCallbacks(updateTimeRunnable);
            elapsedTime = System.currentTimeMillis() - startTime;
            isRunning = false;

            // Show/Hide buttons
            btnStart.setVisibility(View.VISIBLE);
            btnStop.setVisibility(View.GONE);
        }
    }

    private void resetStopwatch() {
        handler.removeCallbacks(updateTimeRunnable);
        elapsedTime = 0L;
        isRunning = false;
        tvTime.setText("00:00:00.000");

        // Show/Hide buttons
        btnStart.setVisibility(View.VISIBLE);
        btnStop.setVisibility(View.GONE);
        btnReset.setVisibility(View.GONE);
    }

    private Runnable updateTimeRunnable = new Runnable() {
        @Override
        public void run() {
            elapsedTime = System.currentTimeMillis() - startTime;

            // Calculate hours, minutes, seconds, and milliseconds
            int hours = (int) (elapsedTime / (1000 * 60 * 60));
            int minutes = (int) (elapsedTime / (1000 * 60)) % 60;
            int seconds = (int) (elapsedTime / 1000) % 60;
            int milliseconds = (int) (elapsedTime % 1000);

            // Display formatted time
            tvTime.setText(String.format("%02d:%02d:%02d.%03d", hours, minutes, seconds, milliseconds));

            // Schedule the next update
            handler.postDelayed(this, 10); // Update every 10 milliseconds
        }
    };
}
